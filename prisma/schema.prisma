generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  nome         String
  email        String   @unique
  senha        String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  password     String
}

model Cliente {
  id                Int        @id @default(autoincrement())
  nome              String
  cpf               String     @unique
  email             String     @unique
  telefone          String
  telefone2         String?
  dtNascimento      DateTime?
  dtSolicitacao     DateTime
  idFcw             Int?
  ativo             Boolean    @default(true)
  andamento         String
  valorCd           Int
  docSuspenso       String?
  alertaNow         Boolean    @default(false)
  dtCriacaoNow      DateTime?
  statusAtendimento Boolean    @default(true)
  corretor          String
  construtora       String
  empreendimento    String
  financeiro        String
  linkdownload      String?
  logs              String?
  statusdownload    String?    @default("\"AGUARDANDO\"")
  termosdeuso       Boolean    @default(false)
  statusPgto        Int?
  biometrias        Biometria?
  documentos        Document?
}

model Biometria {
  id               Int      @id @default(autoincrement())
  tipoBiometria    String
  dadosBiometricos String?
  criadoEm         DateTime @default(now())
  atualizadoEm     DateTime @updatedAt
  clienteId        Int      @unique
  motivo           String?
  status           String?  @default("AGUARDANDO")
  cliente          Cliente  @relation(fields: [clienteId], references: [id], onDelete: Cascade)
}

model Document {
  id               Int       @id @default(autoincrement())
  validade         DateTime?
  arquivoDocumento String?
  criadoEm         DateTime  @default(now())
  atualizadoEm     DateTime  @updatedAt
  clienteId        Int       @unique
  motivo           String?
  numerodocumento  String?
  status           String?   @default("AGUARDANDO")
  tipodocumento    String?
  cliente          Cliente   @relation(fields: [clienteId], references: [id], onDelete: Cascade)
}

model Termos_e_condicoes {
  id           Int      @id @default(autoincrement())
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  termos       String?
}
